//SMALLEST ELEMENT
#include<bits/stdc++.h>
using namespace std ;
void smallestElement(int arr[] )
{ 
  int n = sizeof(arr);
  sort(arr , arr+n);
  cout<< "smallest element is :" << arr[0]<<endl;
  cout<< "second smallest element is: "<<arr[1]<<endl;

}

void main()
{
  int size ;
  cout<< "enter size of array"<<endl;
  cin>>size;
  int *a = new int(n) ;
  cout<<endl<<"enter array";
  for(int i=0 ; i<size;i++)
  {
   cin>> a[i];
  }
  smallestElement(a);

}



//FIND MEDIAN 

class Solution
{
    priority_queue<int, vector<int>, greater<int>> g;
    priority_queue<int> s;
    
    public:
    void insertHeap(int &x){
        if(s.size() > g.size()){
            int temp = x;
            if(s.top() > x){
                temp = s.top();
                s.pop();
                s.push(x);
            }
            g.push(temp);
        }else{
            int temp = x;
            if(!g.empty() && g.top() < x){
                temp = g.top();
                g.pop();
                g.push(x);
            }
            s.push(temp);
        }
    }
    
    void balanceHeaps(){
        
    }
    
    double getMedian(){
        if(s.size() > g.size()){
            return s.top();
        } else {
            return (float)(s.top() + g.top())/2;
        }
    }
};
	





